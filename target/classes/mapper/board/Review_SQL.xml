<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="review">
<!-- 후기 등록 조건 -->
<select id="reviewInsertCheck0" parameterType="hashMap" resultType="hashMap">
<![CDATA[
SELECT DISTINCT ORDER_MEMBER_ID, ORDER_GOODS_NUM
FROM ORDER_GOODS, ORDER_DELI
WHERE ORDER_STATUS = 4 AND ORDER_MEMBER_ID = #{ORDER_MEMBER_ID} AND ORDER_GOODS_NUM = #{ORDER_GOODS_NUM}
]]>
</select>
<!-- 후기 등록 조건 -->
<select id="reviewInsertCheck1" parameterType="hashMap" resultType="hashMap">
<![CDATA[
SELECT DISTINCT REVIEW_NUM, REVIEW_GOODS_NUM, REVIEW_ID, 
                REVIEW_CONTENTS, REVIEW_IMAGE, REVIEW_DATE, REVIEW_DELETE, REVIEW_STATUS, REVIEW_COMMENT
FROM REVIEW
WHERE REVIEW_ID = #{REVIEW_ID} AND REVIEW_GOODS_NUM = #{REVIEW_GOODS_NUM} AND REVIEW_DELETE = 'N'
]]>
</select>
<!-- 후기 등록 --> 
<insert id="reviewInsert" parameterType="hashMap">
<selectKey keyProperty="REVIEW_NUM" resultType="integer" order="BEFORE">
SELECT REVIEW_NUM_SEQ.NEXTVAL FROM DUAL
</selectKey>
<![CDATA[
INSERT INTO REVIEW ( REVIEW_NUM, REVIEW_GOODS_NUM, REVIEW_ID, 
                     REVIEW_CONTENTS, REVIEW_IMAGE, REVIEW_DATE, REVIEW_DELETE, REVIEW_STATUS, REVIEW_COMMENT)
VALUES ( #{REVIEW_NUM}, #{REVIEW_GOODS_NUM}, #{REVIEW_ID}, #{REVIEW_CONTENTS}, NULL, SYSDATE, 'N', '답변대기', NULL)
]]>
</insert>

<!-- 후기 수정 -->
<update id="reviewUpdate" parameterType="hashMap">
<![CDATA[
UPDATE REVIEW
SET REVIEW_CONTENTS = #{REVIEW_CONTENTS},
    REVIEW_DATE = SYSDATE
WHERE REVIEW_NUM = #{REVIEW_NUM}
]]>
</update>

<!-- 후기 삭제 -->
<update id="reviewDelete" parameterType="hashMap">
<![CDATA[
UPDATE REVIEW
SET REVIEW_DELETE = 'Y'
WHERE REVIEW_NUM = #{REVIEW_NUM}
]]>
</update>

<!-- 후기 목록 -->
<select id="reviewList" resultType="hashMap" parameterType="hashMap">
<![CDATA[
SELECT ROW_NUMBER() OVER (ORDER BY REVIEW_NUM DESC) AS RNUM, REVIEW_NUM, GOODS_NUM, REVIEW_ID,
       REVIEW_CONTENTS, TO_CHAR(REVIEW_DATE, 'YYYY.MM.DD') AS REVIEW_DATE, REVIEW_STATUS
FROM REVIEW R INNER JOIN GOODS G 
ON G.GOODS_NUM = R.REVIEW_GOODS_NUM
WHERE REVIEW_DELETE = 'N' AND GOODS_NUM = #{GOODS_NUM}
]]>
</select>

<!-- 후기 검색(내용) -->
<select id="searchContent" resultType="hashMap" parameterType="hashMap">
<![CDATA[
SELECT DISTINCT REVIEW_NUM, REVIEW_GOODS_NUM, REVIEW_ID, REVIEW_CONTENTS, REVIEW_IMAGE, REVIEW_DATE, REVIEW_COMMENT
FROM REVIEW
WHERE REVIEW_CONTENTS LIKE '%' || #{isSearch} || '%' AND REVIEW_DELETE = 'N' AND REVIEW_GOODS_NUM = #{REVIEW_GOODS_NUM}
ORDER BY REVIEW_NUM DESC
]]>
</select>

<!-- 나의 후기 목록 -->
<select id="myReview" resultType="hashMap" parameterType="hashMap">
<![CDATA[
SELECT ROW_NUMBER() OVER (ORDER BY REVIEW_NUM DESC) AS RNUM, REVIEW_NUM, REVIEW_GOODS_NUM, ID,
      GOODS_NUM, GOODS_NAME, IMAGE_STORED, REVIEW_STATUS
FROM REVIEW R, MEMBER M, GOODS G, IMAGE I
WHERE REVIEW_DELETE = 'N' AND M.ID = R.REVIEW_ID AND M.ID = #{ID}
AND REVIEW_GOODS_NUM = GOODS_NUM
AND GOODS_NUM = IMAGE_GOODS_NUM
AND IMAGE_CATEGORY = 1
]]>
</select>

<!-- 후기 수정용 상세보기 -->
<select id="reviewDetail" resultType="hashMap" parameterType="hashMap">
<![CDATA[
SELECT REVIEW_NUM, REVIEW_GOODS_NUM, REVIEW_ID, REVIEW_CONTENTS, REVIEW_IMAGE, REVIEW_DATE, REVIEW_DELETE, REVIEW_STATUS, REVIEW_COMMENT 
FROM REVIEW
WHERE REVIEW_NUM = #{REVIEW_NUM}
]]>
</select>

</mapper>